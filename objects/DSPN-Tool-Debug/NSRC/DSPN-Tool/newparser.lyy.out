 State 0:
          parser_entry ::= * GREATSPN_MEASURE measure opt_semicolon END
          parser_entry ::= * GREATSPN_MDEPDELAY real_mdexpr opt_semicolon END
          parser_entry ::= * GREATSPN_MDEARCMULT int_mdexpr opt_semicolon END
          parser_entry ::= * GREATSPN_TRNGUARD logic_mdcond opt_semicolon END
          parser_entry ::= * GREATSPN_GENERALPDF real_mdexpr opt_semicolon END
          parser_entry ::= * DTA_EDGE_DEF dta_edge END
          parser_entry ::= * DTA_STATE_PROPOSITION cslta_expr END
          parser_entry ::= * DTA_BINDING_RULES dta_binding END
          parser_entry ::= * CSLTA_EXPR cslta_expr END
          parser_entry ::= * INVALID

              GREATSPN_MEASURE shift  65
            GREATSPN_MDEPDELAY shift  1
           GREATSPN_MDEARCMULT shift  59
             GREATSPN_TRNGUARD shift  41
           GREATSPN_GENERALPDF shift  18
                  DTA_EDGE_DEF shift  92
         DTA_STATE_PROPOSITION shift  19
             DTA_BINDING_RULES shift  62
                    CSLTA_EXPR shift  26
                       INVALID shift  318
                  parser_entry accept

State 1:
          parser_entry ::= GREATSPN_MDEPDELAY * real_mdexpr opt_semicolon END
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  78
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 2:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr PLUS * real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  141
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 3:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= OP_PAREN * real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  108
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 4:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr MINUS * real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  140
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 5:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr TIMES * real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  245
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 6:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= real_mdexpr DIV * real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  246
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 7:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= binary_real_fn OP_SQPAR * real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  109
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 8:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= binary_real_fn OP_SQPAR real_mdexpr COMMA * real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  110
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 9:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= MINUS * real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  248
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 10:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= unary_real_fn OP_SQPAR * real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  111
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 11:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= LOG_FN OP_SQPAR * real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= LOG_FN OP_SQPAR * real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  96
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 12:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= LOG_FN OP_SQPAR real_mdexpr COMMA * real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  112
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 13:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= IF_FN OP_SQPAR logic_mdcond COMMA * real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  113
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 14:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA * real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  114
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 15:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= WHEN logic_mdcond COLON * real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  115
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 16:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER * real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  116
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 17:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          real_mdexpr ::= EVER * real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  117
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 18:
          parser_entry ::= GREATSPN_GENERALPDF * real_mdexpr opt_semicolon END
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= * real_const
          real_mdexpr ::= * int_marking
          real_mdexpr ::= * PDF_X_VAR
          real_mdexpr ::= * OP_PAREN real_mdexpr CL_PAREN
          real_mdexpr ::= * real_mdexpr PLUS real_mdexpr
          real_mdexpr ::= * real_mdexpr MINUS real_mdexpr
          real_mdexpr ::= * real_mdexpr TIMES real_mdexpr
          real_mdexpr ::= * real_mdexpr DIV real_mdexpr
          real_mdexpr ::= * binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * MINUS real_mdexpr
          real_mdexpr ::= * unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= * LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          real_mdexpr ::= * WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          real_mdexpr ::= * EVER real_mdexpr SEMICOLON
          unary_real_fn ::= * unary_int_fn
          unary_real_fn ::= * SIN_FN
          unary_real_fn ::= * COS_FN
          unary_real_fn ::= * TAN_FN
          unary_real_fn ::= * ARCSIN_FN
          unary_real_fn ::= * ARCCOS_FN
          unary_real_fn ::= * ARCTAN_FN
          unary_real_fn ::= * EXP_FN
          unary_real_fn ::= * SQRT_FN
          unary_real_fn ::= * CEIL_FN
          unary_real_fn ::= * FLOOR_FN
          unary_real_fn ::= * DIRACDELTA_FN
          binary_real_fn ::= * binary_int_fn
          binary_real_fn ::= * POW_FN
          binary_real_fn ::= * RECT_FN
          binary_real_fn ::= * UNIFORM_FN
          binary_real_fn ::= * TRIANGULAR_FN
          binary_real_fn ::= * ERLANG_FN
          binary_real_fn ::= * TRUNCATED_EXP_FN
          binary_real_fn ::= * PARETO_FN

                         MINUS shift  9
                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                         SHARP shift  150
                      OP_PAREN shift  3
                         IF_FN shift  162
                          WHEN shift  40
                          EVER shift  17
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     PDF_X_VAR shift  243
                        LOG_FN shift  161
                        SIN_FN shift  256
                        COS_FN shift  257
                        TAN_FN shift  258
                     ARCSIN_FN shift  259
                     ARCCOS_FN shift  260
                     ARCTAN_FN shift  261
                        EXP_FN shift  262
                       SQRT_FN shift  263
                       CEIL_FN shift  264
                      FLOOR_FN shift  265
                 DIRACDELTA_FN shift  266
                        POW_FN shift  268
                       RECT_FN shift  269
                    UNIFORM_FN shift  270
                 TRIANGULAR_FN shift  271
                     ERLANG_FN shift  272
              TRUNCATED_EXP_FN shift  273
                     PARETO_FN shift  274
                    real_const shift  241
                   int_marking shift  242
                   real_mdexpr shift  80
                  unary_int_fn shift  255
                 unary_real_fn shift  160
                 binary_int_fn shift  267
                binary_real_fn shift  159

State 19:
          parser_entry ::= DTA_STATE_PROPOSITION * cslta_expr END
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          cslta_expr ::= * TRUE
          cslta_expr ::= * FALSE
          cslta_expr ::= * G_ATOMIC_PROP_ID
          cslta_expr ::= * G_PLACE_ID
          cslta_expr ::= * int_mdexpr comp_op int_mdexpr
          cslta_expr ::= * OP_PAREN cslta_expr CL_PAREN
          cslta_expr ::= * NOT cslta_expr
          cslta_expr ::= * cslta_expr AND cslta_expr
          cslta_expr ::= * cslta_expr OR cslta_expr
          cslta_expr ::= * PROB_TA comp_op real_const id_or_quoted_id OP_PAREN dta_binding CL_PAREN

                         MINUS shift  49
                           NOT shift  23
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                    G_PLACE_ID shift  297
                      OP_PAREN shift  21
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  294
                         FALSE shift  295
              G_ATOMIC_PROP_ID shift  296
                       PROB_TA shift  77
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  75
                    cslta_expr shift  133
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 20:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          cslta_expr ::= * TRUE
          cslta_expr ::= * FALSE
          cslta_expr ::= * G_ATOMIC_PROP_ID
          cslta_expr ::= * G_PLACE_ID
          cslta_expr ::= * int_mdexpr comp_op int_mdexpr
          cslta_expr ::= * OP_PAREN cslta_expr CL_PAREN
          cslta_expr ::= * NOT cslta_expr
          cslta_expr ::= * cslta_expr AND cslta_expr
          cslta_expr ::= cslta_expr AND * cslta_expr
          cslta_expr ::= * cslta_expr OR cslta_expr
          cslta_expr ::= * PROB_TA comp_op real_const id_or_quoted_id OP_PAREN dta_binding CL_PAREN

                         MINUS shift  49
                           NOT shift  23
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                    G_PLACE_ID shift  297
                      OP_PAREN shift  21
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  294
                         FALSE shift  295
              G_ATOMIC_PROP_ID shift  296
                       PROB_TA shift  77
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  75
                    cslta_expr shift  315
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 21:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= OP_PAREN * int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          cslta_expr ::= * TRUE
          cslta_expr ::= * FALSE
          cslta_expr ::= * G_ATOMIC_PROP_ID
          cslta_expr ::= * G_PLACE_ID
          cslta_expr ::= * int_mdexpr comp_op int_mdexpr
          cslta_expr ::= * OP_PAREN cslta_expr CL_PAREN
          cslta_expr ::= OP_PAREN * cslta_expr CL_PAREN
          cslta_expr ::= * NOT cslta_expr
          cslta_expr ::= * cslta_expr AND cslta_expr
          cslta_expr ::= * cslta_expr OR cslta_expr
          cslta_expr ::= * PROB_TA comp_op real_const id_or_quoted_id OP_PAREN dta_binding CL_PAREN

                         MINUS shift  49
                           NOT shift  23
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                    G_PLACE_ID shift  297
                      OP_PAREN shift  21
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  294
                         FALSE shift  295
              G_ATOMIC_PROP_ID shift  296
                       PROB_TA shift  77
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  73
                    cslta_expr shift  134
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 22:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          cslta_expr ::= * TRUE
          cslta_expr ::= * FALSE
          cslta_expr ::= * G_ATOMIC_PROP_ID
          cslta_expr ::= * G_PLACE_ID
          cslta_expr ::= * int_mdexpr comp_op int_mdexpr
          cslta_expr ::= * OP_PAREN cslta_expr CL_PAREN
          cslta_expr ::= * NOT cslta_expr
          cslta_expr ::= * cslta_expr AND cslta_expr
          cslta_expr ::= * cslta_expr OR cslta_expr
          cslta_expr ::= cslta_expr OR * cslta_expr
          cslta_expr ::= * PROB_TA comp_op real_const id_or_quoted_id OP_PAREN dta_binding CL_PAREN

                         MINUS shift  49
                           NOT shift  23
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                    G_PLACE_ID shift  297
                      OP_PAREN shift  21
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  294
                         FALSE shift  295
              G_ATOMIC_PROP_ID shift  296
                       PROB_TA shift  77
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  75
                    cslta_expr shift  188
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 23:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          cslta_expr ::= * TRUE
          cslta_expr ::= * FALSE
          cslta_expr ::= * G_ATOMIC_PROP_ID
          cslta_expr ::= * G_PLACE_ID
          cslta_expr ::= * int_mdexpr comp_op int_mdexpr
          cslta_expr ::= * OP_PAREN cslta_expr CL_PAREN
          cslta_expr ::= * NOT cslta_expr
          cslta_expr ::= NOT * cslta_expr
          cslta_expr ::= * cslta_expr AND cslta_expr
          cslta_expr ::= * cslta_expr OR cslta_expr
          cslta_expr ::= * PROB_TA comp_op real_const id_or_quoted_id OP_PAREN dta_binding CL_PAREN

                         MINUS shift  49
                           NOT shift  23
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                    G_PLACE_ID shift  297
                      OP_PAREN shift  21
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  294
                         FALSE shift  295
              G_ATOMIC_PROP_ID shift  296
                       PROB_TA shift  77
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  75
                    cslta_expr shift  299
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 24:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          spexpr_list ::= spexpr_name EQ * cslta_expr
          cslta_expr ::= * TRUE
          cslta_expr ::= * FALSE
          cslta_expr ::= * G_ATOMIC_PROP_ID
          cslta_expr ::= * G_PLACE_ID
          cslta_expr ::= * int_mdexpr comp_op int_mdexpr
          cslta_expr ::= * OP_PAREN cslta_expr CL_PAREN
          cslta_expr ::= * NOT cslta_expr
          cslta_expr ::= * cslta_expr AND cslta_expr
          cslta_expr ::= * cslta_expr OR cslta_expr
          cslta_expr ::= * PROB_TA comp_op real_const id_or_quoted_id OP_PAREN dta_binding CL_PAREN

                         MINUS shift  49
                           NOT shift  23
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                    G_PLACE_ID shift  297
                      OP_PAREN shift  21
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  294
                         FALSE shift  295
              G_ATOMIC_PROP_ID shift  296
                       PROB_TA shift  77
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  75
                    cslta_expr shift  147
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 25:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          spexpr_list ::= spexpr_list COMMA spexpr_name EQ * cslta_expr
          cslta_expr ::= * TRUE
          cslta_expr ::= * FALSE
          cslta_expr ::= * G_ATOMIC_PROP_ID
          cslta_expr ::= * G_PLACE_ID
          cslta_expr ::= * int_mdexpr comp_op int_mdexpr
          cslta_expr ::= * OP_PAREN cslta_expr CL_PAREN
          cslta_expr ::= * NOT cslta_expr
          cslta_expr ::= * cslta_expr AND cslta_expr
          cslta_expr ::= * cslta_expr OR cslta_expr
          cslta_expr ::= * PROB_TA comp_op real_const id_or_quoted_id OP_PAREN dta_binding CL_PAREN

                         MINUS shift  49
                           NOT shift  23
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                    G_PLACE_ID shift  297
                      OP_PAREN shift  21
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  294
                         FALSE shift  295
              G_ATOMIC_PROP_ID shift  296
                       PROB_TA shift  77
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  75
                    cslta_expr shift  148
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 26:
          parser_entry ::= CSLTA_EXPR * cslta_expr END
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          cslta_expr ::= * TRUE
          cslta_expr ::= * FALSE
          cslta_expr ::= * G_ATOMIC_PROP_ID
          cslta_expr ::= * G_PLACE_ID
          cslta_expr ::= * int_mdexpr comp_op int_mdexpr
          cslta_expr ::= * OP_PAREN cslta_expr CL_PAREN
          cslta_expr ::= * NOT cslta_expr
          cslta_expr ::= * cslta_expr AND cslta_expr
          cslta_expr ::= * cslta_expr OR cslta_expr
          cslta_expr ::= * PROB_TA comp_op real_const id_or_quoted_id OP_PAREN dta_binding CL_PAREN

                         MINUS shift  49
                           NOT shift  23
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                    G_PLACE_ID shift  297
                      OP_PAREN shift  21
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  294
                         FALSE shift  295
              G_ATOMIC_PROP_ID shift  296
                       PROB_TA shift  77
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  75
                    cslta_expr shift  135
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 27:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond
          measure ::= OPEN_P * logic_mdcond CL_BRACK

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  123
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 28:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= OP_PAREN * int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= OP_PAREN * logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  72
                  logic_mdcond shift  122
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 29:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= IF_FN OP_SQPAR * logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  121
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 30:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= WHEN * logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  120
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 31:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= logic_mdcond AND * logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  221
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 32:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= NOT * logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  220
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 33:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond
          logic_mdcond ::= logic_mdcond OR * logic_mdcond

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  155
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 34:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond
          measure ::= real_const OPEN_P * logic_mdcond CL_BRACK

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  125
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 35:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= int_mdexpr DIV * int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond
          measure ::= real_const OPEN_E int_mdexpr DIV * logic_mdcond CL_BRACK

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  76
                  logic_mdcond shift  126
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 36:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond
          measure ::= real_const OPEN_X G_TRANSITION_ID DIV * logic_mdcond CL_BRACK

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  127
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 37:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= int_mdexpr DIV * int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond
          measure ::= OPEN_E int_mdexpr DIV * logic_mdcond CL_BRACK

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  76
                  logic_mdcond shift  128
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 38:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond
          measure ::= OPEN_X G_TRANSITION_ID DIV * logic_mdcond CL_BRACK

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  129
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 39:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= IF_FN OP_SQPAR * logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  130
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 40:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          real_mdexpr ::= WHEN * logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  131
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 41:
          parser_entry ::= GREATSPN_TRNGUARD * logic_mdcond opt_semicolon END
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= * TRUE
          logic_mdcond ::= * FALSE
          logic_mdcond ::= * int_mdexpr comp_op int_mdexpr
          logic_mdcond ::= * NOT logic_mdcond
          logic_mdcond ::= * OP_PAREN logic_mdcond CL_PAREN
          logic_mdcond ::= * logic_mdcond AND logic_mdcond
          logic_mdcond ::= * logic_mdcond OR logic_mdcond

                         MINUS shift  49
                           NOT shift  32
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  28
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                          TRUE shift  218
                         FALSE shift  219
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  74
                  logic_mdcond shift  85
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 42:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr PLUS * int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  137
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 43:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= OP_PAREN * int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  97
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 44:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr MINUS * int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  136
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 45:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr TIMES * int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  204
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 46:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= int_mdexpr DIV * int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  205
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 47:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= binary_int_fn OP_SQPAR * int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  98
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 48:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= binary_int_fn OP_SQPAR int_mdexpr COMMA * int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  99
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 49:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= MINUS * int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  207
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 50:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= unary_int_fn OP_SQPAR * int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  100
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 51:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          logic_mdcond ::= int_mdexpr comp_op * int_mdexpr

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  118
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 52:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= WHEN logic_mdcond COLON * int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  101
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 53:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER * int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  102
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 54:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          int_mdexpr ::= EVER * int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  103
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 55:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= IF_FN OP_SQPAR logic_mdcond COMMA * int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  104
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 56:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA * int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  105
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 57:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          measure ::= real_const OPEN_E * int_mdexpr CL_BRACK
          measure ::= real_const OPEN_E * int_mdexpr DIV logic_mdcond CL_BRACK

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  106
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 58:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          measure ::= OPEN_E * int_mdexpr CL_BRACK
          measure ::= OPEN_E * int_mdexpr DIV logic_mdcond CL_BRACK

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  107
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 59:
          parser_entry ::= GREATSPN_MDEARCMULT * int_mdexpr opt_semicolon END
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  79
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 60:
          int_const ::= * INTEGER
          int_const ::= * G_MARK_PARAM
          int_marking ::= * SHARP G_PLACE_ID
          int_mdexpr ::= * int_const
          int_mdexpr ::= * int_marking
          int_mdexpr ::= * OP_PAREN int_mdexpr CL_PAREN
          int_mdexpr ::= * int_mdexpr PLUS int_mdexpr
          int_mdexpr ::= * int_mdexpr MINUS int_mdexpr
          int_mdexpr ::= * int_mdexpr TIMES int_mdexpr
          int_mdexpr ::= * int_mdexpr DIV int_mdexpr
          int_mdexpr ::= * binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * MINUS int_mdexpr
          int_mdexpr ::= * unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR
          int_mdexpr ::= * IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          int_mdexpr ::= * WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          int_mdexpr ::= * EVER int_mdexpr SEMICOLON
          unary_int_fn ::= * ABS_FN
          unary_int_fn ::= * FACTORIAL_FN
          binary_int_fn ::= * MIN_FN
          binary_int_fn ::= * MAX_FN
          binary_int_fn ::= * MOD_FN
          binary_int_fn ::= * BINOMIAL_FN
          binary_int_fn ::= * FRACT_FN
          cslta_expr ::= int_mdexpr comp_op * int_mdexpr

                         MINUS shift  49
                       INTEGER shift  198
                  G_MARK_PARAM shift  199
                         SHARP shift  150
                      OP_PAREN shift  43
                         IF_FN shift  153
                          WHEN shift  30
                          EVER shift  54
                        ABS_FN shift  211
                  FACTORIAL_FN shift  212
                        MIN_FN shift  213
                        MAX_FN shift  214
                        MOD_FN shift  215
                   BINOMIAL_FN shift  216
                      FRACT_FN shift  217
                     int_const shift  201
                   int_marking shift  202
                    int_mdexpr shift  119
                  unary_int_fn shift  152
                 binary_int_fn shift  151

State 61:
          clock_id_name ::= * id_or_quoted_id
          clock_id_name ::= * G_RATE_PARAM
          clock_id_name ::= * G_CLOCKVALUE_ID
    (124) clock_value_list ::= *
          clock_value_list ::= * clock_id_name EQ real_const
          clock_value_list ::= * clock_value_list COMMA clock_id_name EQ real_const
          dta_binding ::= * clock_value_list
          dta_binding ::= * clock_value_list OR transition_list OR spexpr_list
          id_or_quoted_id ::= * ID
          id_or_quoted_id ::= * STRING
          cslta_expr ::= PROB_TA comp_op real_const id_or_quoted_id OP_PAREN * dta_binding CL_PAREN

                  G_RATE_PARAM shift  303
               G_CLOCKVALUE_ID shift  304
                            ID shift  300
                        STRING shift  301
              clock_value_list shift  145
                   dta_binding shift  187
               id_or_quoted_id shift  302
                 clock_id_name shift  178
                     {default} reduce 124

State 62:
          parser_entry ::= DTA_BINDING_RULES * dta_binding END
          clock_id_name ::= * id_or_quoted_id
          clock_id_name ::= * G_RATE_PARAM
          clock_id_name ::= * G_CLOCKVALUE_ID
    (124) clock_value_list ::= *
          clock_value_list ::= * clock_id_name EQ real_const
          clock_value_list ::= * clock_value_list COMMA clock_id_name EQ real_const
          dta_binding ::= * clock_value_list
          dta_binding ::= * clock_value_list OR transition_list OR spexpr_list
          id_or_quoted_id ::= * ID
          id_or_quoted_id ::= * STRING

                  G_RATE_PARAM shift  303
               G_CLOCKVALUE_ID shift  304
                            ID shift  300
                        STRING shift  301
              clock_value_list shift  145
                   dta_binding shift  189
               id_or_quoted_id shift  302
                 clock_id_name shift  178
                     {default} reduce 124

State 63:
          transition_id_name ::= * id_or_quoted_id
          transition_id_name ::= * G_TRANSITION_ID
          transition_id_name ::= * G_ACTION_ID
    (127) transition_list ::= *
          transition_list ::= * transition_id_name EQ G_TRANSITION_ID
          transition_list ::= * transition_list COMMA transition_id_name EQ G_TRANSITION_ID
          dta_binding ::= clock_value_list OR * transition_list OR spexpr_list
          id_or_quoted_id ::= * ID
          id_or_quoted_id ::= * STRING

               G_TRANSITION_ID shift  308
                   G_ACTION_ID shift  309
                            ID shift  300
                        STRING shift  301
               transition_list shift  146
               id_or_quoted_id shift  307
            transition_id_name shift  180
                     {default} reduce 127

State 64:
    (130) spexpr_list ::= *
          spexpr_list ::= * spexpr_name EQ cslta_expr
          spexpr_list ::= * spexpr_list COMMA spexpr_name EQ cslta_expr
          spexpr_name ::= * id_or_quoted_id
          spexpr_name ::= * G_ATOMIC_PROP_ID
          dta_binding ::= clock_value_list OR transition_list OR * spexpr_list
          id_or_quoted_id ::= * ID
          id_or_quoted_id ::= * STRING

              G_ATOMIC_PROP_ID shift  313
                            ID shift  300
                        STRING shift  301
                   spexpr_list shift  185
               id_or_quoted_id shift  312
                   spexpr_name shift  184
                     {default} reduce 130

State 65:
          parser_entry ::= GREATSPN_MEASURE * measure opt_semicolon END
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          measure ::= * measure PLUS measure
          measure ::= * measure MINUS measure
          measure ::= * OPEN_P logic_mdcond CL_BRACK
          measure ::= * real_const OPEN_P logic_mdcond CL_BRACK
          measure ::= * OPEN_E int_mdexpr CL_BRACK
          measure ::= * real_const OPEN_E int_mdexpr CL_BRACK
          measure ::= * OPEN_E int_mdexpr DIV logic_mdcond CL_BRACK
          measure ::= * real_const OPEN_E int_mdexpr DIV logic_mdcond CL_BRACK
          measure ::= * OPEN_X G_TRANSITION_ID CL_BRACK
          measure ::= * real_const OPEN_X G_TRANSITION_ID CL_BRACK
          measure ::= * OPEN_X G_TRANSITION_ID DIV logic_mdcond CL_BRACK
          measure ::= * real_const OPEN_X G_TRANSITION_ID DIV logic_mdcond CL_BRACK

                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                        OPEN_P shift  27
                        OPEN_E shift  58
                        OPEN_X shift  157
                       measure shift  84
                    real_const shift  124

State 66:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          measure ::= * measure PLUS measure
          measure ::= measure PLUS * measure
          measure ::= * measure MINUS measure
          measure ::= * OPEN_P logic_mdcond CL_BRACK
          measure ::= * real_const OPEN_P logic_mdcond CL_BRACK
          measure ::= * OPEN_E int_mdexpr CL_BRACK
          measure ::= * real_const OPEN_E int_mdexpr CL_BRACK
          measure ::= * OPEN_E int_mdexpr DIV logic_mdcond CL_BRACK
          measure ::= * real_const OPEN_E int_mdexpr DIV logic_mdcond CL_BRACK
          measure ::= * OPEN_X G_TRANSITION_ID CL_BRACK
          measure ::= * real_const OPEN_X G_TRANSITION_ID CL_BRACK
          measure ::= * OPEN_X G_TRANSITION_ID DIV logic_mdcond CL_BRACK
          measure ::= * real_const OPEN_X G_TRANSITION_ID DIV logic_mdcond CL_BRACK

                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                        OPEN_P shift  27
                        OPEN_E shift  58
                        OPEN_X shift  157
                       measure shift  196
                    real_const shift  124

State 67:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          measure ::= * measure PLUS measure
          measure ::= * measure MINUS measure
          measure ::= measure MINUS * measure
          measure ::= * OPEN_P logic_mdcond CL_BRACK
          measure ::= * real_const OPEN_P logic_mdcond CL_BRACK
          measure ::= * OPEN_E int_mdexpr CL_BRACK
          measure ::= * real_const OPEN_E int_mdexpr CL_BRACK
          measure ::= * OPEN_E int_mdexpr DIV logic_mdcond CL_BRACK
          measure ::= * real_const OPEN_E int_mdexpr DIV logic_mdcond CL_BRACK
          measure ::= * OPEN_X G_TRANSITION_ID CL_BRACK
          measure ::= * real_const OPEN_X G_TRANSITION_ID CL_BRACK
          measure ::= * OPEN_X G_TRANSITION_ID DIV logic_mdcond CL_BRACK
          measure ::= * real_const OPEN_X G_TRANSITION_ID DIV logic_mdcond CL_BRACK

                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                        OPEN_P shift  27
                        OPEN_E shift  58
                        OPEN_X shift  157
                       measure shift  197
                    real_const shift  124

State 68:
          clock_id_name ::= * id_or_quoted_id
          clock_id_name ::= * G_RATE_PARAM
          clock_id_name ::= * G_CLOCKVALUE_ID
          clock_value_list ::= clock_value_list COMMA * clock_id_name EQ real_const
          id_or_quoted_id ::= * ID
          id_or_quoted_id ::= * STRING

                  G_RATE_PARAM shift  303
               G_CLOCKVALUE_ID shift  304
                            ID shift  300
                        STRING shift  301
               id_or_quoted_id shift  302
                 clock_id_name shift  179

State 69:
          transition_id_name ::= * id_or_quoted_id
          transition_id_name ::= * G_TRANSITION_ID
          transition_id_name ::= * G_ACTION_ID
          transition_list ::= transition_list COMMA * transition_id_name EQ G_TRANSITION_ID
          id_or_quoted_id ::= * ID
          id_or_quoted_id ::= * STRING

               G_TRANSITION_ID shift  308
                   G_ACTION_ID shift  309
                            ID shift  300
                        STRING shift  301
               id_or_quoted_id shift  307
            transition_id_name shift  182

State 70:
          clock_value ::= * G_CLOCKVALUE_ID
          clock_value ::= * INTEGER
          clock_constr ::= * clock_value LESS XCLK LESS clock_value
          clock_constr ::= * XCLK LESS clock_value
          clock_constr ::= * clock_value LESS XCLK
          clock_constr ::= * XCLK GREATER clock_value
          clock_constr ::= * clock_value GREATER XCLK
          clock_constr ::= * XCLK EQ clock_value
          dta_edge ::= OP_PAREN * clock_constr COMMA actset opt_reset CL_PAREN

                       INTEGER shift  280
               G_CLOCKVALUE_ID shift  279
                          XCLK shift  132
                  clock_constr shift  171
                   clock_value shift  142

State 71:
          spexpr_list ::= spexpr_list COMMA * spexpr_name EQ cslta_expr
          spexpr_name ::= * id_or_quoted_id
          spexpr_name ::= * G_ATOMIC_PROP_ID
          id_or_quoted_id ::= * ID
          id_or_quoted_id ::= * STRING

              G_ATOMIC_PROP_ID shift  313
                            ID shift  300
                        STRING shift  301
               id_or_quoted_id shift  312
                   spexpr_name shift  186

State 72:
          int_mdexpr ::= OP_PAREN int_mdexpr * CL_PAREN
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          logic_mdcond ::= int_mdexpr * comp_op int_mdexpr
          comp_op ::= * EQ
          comp_op ::= * NOT_EQ
          comp_op ::= * GREATER
          comp_op ::= * LESS
          comp_op ::= * GREATER_EQ
          comp_op ::= * LESS_EQ

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                          LESS shift  225
                       LESS_EQ shift  227
                            EQ shift  222
                        NOT_EQ shift  223
                       GREATER shift  224
                    GREATER_EQ shift  226
                      CL_PAREN shift  203
                       comp_op shift  51

State 73:
          int_mdexpr ::= OP_PAREN int_mdexpr * CL_PAREN
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          comp_op ::= * EQ
          comp_op ::= * NOT_EQ
          comp_op ::= * GREATER
          comp_op ::= * LESS
          comp_op ::= * GREATER_EQ
          comp_op ::= * LESS_EQ
          cslta_expr ::= int_mdexpr * comp_op int_mdexpr

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                          LESS shift  225
                       LESS_EQ shift  227
                            EQ shift  222
                        NOT_EQ shift  223
                       GREATER shift  224
                    GREATER_EQ shift  226
                      CL_PAREN shift  203
                       comp_op shift  60

State 74:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          logic_mdcond ::= int_mdexpr * comp_op int_mdexpr
          comp_op ::= * EQ
          comp_op ::= * NOT_EQ
          comp_op ::= * GREATER
          comp_op ::= * LESS
          comp_op ::= * GREATER_EQ
          comp_op ::= * LESS_EQ

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                          LESS shift  225
                       LESS_EQ shift  227
                            EQ shift  222
                        NOT_EQ shift  223
                       GREATER shift  224
                    GREATER_EQ shift  226
                       comp_op shift  51

State 75:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          comp_op ::= * EQ
          comp_op ::= * NOT_EQ
          comp_op ::= * GREATER
          comp_op ::= * LESS
          comp_op ::= * GREATER_EQ
          comp_op ::= * LESS_EQ
          cslta_expr ::= int_mdexpr * comp_op int_mdexpr

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                          LESS shift  225
                       LESS_EQ shift  227
                            EQ shift  222
                        NOT_EQ shift  223
                       GREATER shift  224
                    GREATER_EQ shift  226
                       comp_op shift  60

State 76:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
     (25) int_mdexpr ::= int_mdexpr DIV int_mdexpr *
          logic_mdcond ::= int_mdexpr * comp_op int_mdexpr
          comp_op ::= * EQ
          comp_op ::= * NOT_EQ
          comp_op ::= * GREATER
          comp_op ::= * LESS
          comp_op ::= * GREATER_EQ
          comp_op ::= * LESS_EQ

                          LESS shift  225
                       LESS_EQ shift  227
                            EQ shift  222
                        NOT_EQ shift  223
                       GREATER shift  224
                    GREATER_EQ shift  226
                       comp_op shift  51
                     {default} reduce 25

State 77:
          comp_op ::= * EQ
          comp_op ::= * NOT_EQ
          comp_op ::= * GREATER
          comp_op ::= * LESS
          comp_op ::= * GREATER_EQ
          comp_op ::= * LESS_EQ
          cslta_expr ::= PROB_TA * comp_op real_const id_or_quoted_id OP_PAREN dta_binding CL_PAREN

                          LESS shift  225
                       LESS_EQ shift  227
                            EQ shift  222
                        NOT_EQ shift  223
                       GREATER shift  224
                    GREATER_EQ shift  226
                       comp_op shift  81

State 78:
          parser_entry ::= GREATSPN_MDEPDELAY real_mdexpr * opt_semicolon END
     (10) opt_semicolon ::= *
          opt_semicolon ::= * SEMICOLON
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                     SEMICOLON shift  191
                 opt_semicolon shift  158
                     {default} reduce 10

State 79:
          parser_entry ::= GREATSPN_MDEARCMULT int_mdexpr * opt_semicolon END
     (10) opt_semicolon ::= *
          opt_semicolon ::= * SEMICOLON
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                     SEMICOLON shift  191
                 opt_semicolon shift  164
                     {default} reduce 10

State 80:
          parser_entry ::= GREATSPN_GENERALPDF real_mdexpr * opt_semicolon END
     (10) opt_semicolon ::= *
          opt_semicolon ::= * SEMICOLON
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                     SEMICOLON shift  191
                 opt_semicolon shift  166
                     {default} reduce 10

State 81:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          cslta_expr ::= PROB_TA comp_op * real_const id_or_quoted_id OP_PAREN dta_binding CL_PAREN

                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                    real_const shift  91

State 82:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          clock_value_list ::= clock_id_name EQ * real_const

                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                    real_const shift  305

State 83:
          real_const ::= * REALNUM
          real_const ::= * INTEGER
          real_const ::= * G_RATE_PARAM
          real_const ::= * G_MARK_PARAM
          clock_value_list ::= clock_value_list COMMA clock_id_name EQ * real_const

                       REALNUM shift  192
                       INTEGER shift  193
                  G_RATE_PARAM shift  194
                  G_MARK_PARAM shift  195
                    real_const shift  306

State 84:
          parser_entry ::= GREATSPN_MEASURE measure * opt_semicolon END
     (10) opt_semicolon ::= *
          opt_semicolon ::= * SEMICOLON
          measure ::= measure * PLUS measure
          measure ::= measure * MINUS measure

                          PLUS shift  66
                         MINUS shift  67
                     SEMICOLON shift  191
                 opt_semicolon shift  149
                     {default} reduce 10

State 85:
          parser_entry ::= GREATSPN_TRNGUARD logic_mdcond * opt_semicolon END
     (10) opt_semicolon ::= *
          opt_semicolon ::= * SEMICOLON
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond

                            OR shift  33
                           AND shift  31
                     SEMICOLON shift  191
                 opt_semicolon shift  165
                     {default} reduce 10

State 86:
          actset ::= * ACTS
          actset ::= * ACTS SETMINUS OP_BRACK act_list CL_BRACK
          actset ::= * OP_BRACK act_list CL_BRACK
          actset ::= * SHARP
          dta_edge ::= OP_PAREN clock_constr COMMA * actset opt_reset CL_PAREN

                         SHARP shift  290
                          ACTS shift  172
                      OP_BRACK shift  94
                        actset shift  95

State 87:
          clock_value ::= * G_CLOCKVALUE_ID
          clock_value ::= * INTEGER
          clock_constr ::= clock_value LESS XCLK LESS * clock_value

                       INTEGER shift  280
               G_CLOCKVALUE_ID shift  279
                   clock_value shift  281

State 88:
          clock_value ::= * G_CLOCKVALUE_ID
          clock_value ::= * INTEGER
          clock_constr ::= XCLK LESS * clock_value

                       INTEGER shift  280
               G_CLOCKVALUE_ID shift  279
                   clock_value shift  283

State 89:
          clock_value ::= * G_CLOCKVALUE_ID
          clock_value ::= * INTEGER
          clock_constr ::= XCLK GREATER * clock_value

                       INTEGER shift  280
               G_CLOCKVALUE_ID shift  279
                   clock_value shift  284

State 90:
          clock_value ::= * G_CLOCKVALUE_ID
          clock_value ::= * INTEGER
          clock_constr ::= XCLK EQ * clock_value

                       INTEGER shift  280
               G_CLOCKVALUE_ID shift  279
                   clock_value shift  285

State 91:
          id_or_quoted_id ::= * ID
          id_or_quoted_id ::= * STRING
          cslta_expr ::= PROB_TA comp_op real_const * id_or_quoted_id OP_PAREN dta_binding CL_PAREN

                            ID shift  300
                        STRING shift  301
               id_or_quoted_id shift  177

State 92:
          parser_entry ::= DTA_EDGE_DEF * dta_edge END
          dta_edge ::= * OP_PAREN clock_constr COMMA actset opt_reset CL_PAREN

                      OP_PAREN shift  70
                      dta_edge shift  167

State 93:
    (100) act_list ::= *
          act_list ::= * G_ACTION_ID
          act_list ::= * act_list COMMA G_ACTION_ID
          actset ::= ACTS SETMINUS OP_BRACK * act_list CL_BRACK

                   G_ACTION_ID shift  286
                      act_list shift  143
                     {default} reduce 100

State 94:
    (100) act_list ::= *
          act_list ::= * G_ACTION_ID
          act_list ::= * act_list COMMA G_ACTION_ID
          actset ::= OP_BRACK * act_list CL_BRACK

                   G_ACTION_ID shift  286
                      act_list shift  144
                     {default} reduce 100

State 95:
          opt_reset ::= * COMMA RESET
    (116) opt_reset ::= *
          dta_edge ::= OP_PAREN clock_constr COMMA actset * opt_reset CL_PAREN

                         COMMA shift  175
                     opt_reset shift  176
                     {default} reduce 116

State 96:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
          real_mdexpr ::= LOG_FN OP_SQPAR real_mdexpr * CL_SQPAR
          real_mdexpr ::= LOG_FN OP_SQPAR real_mdexpr * COMMA real_mdexpr CL_SQPAR

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                         COMMA shift  12
                      CL_SQPAR shift  250

State 97:
          int_mdexpr ::= OP_PAREN int_mdexpr * CL_PAREN
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                      CL_PAREN shift  203

State 98:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          int_mdexpr ::= binary_int_fn OP_SQPAR int_mdexpr * COMMA int_mdexpr CL_SQPAR

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                         COMMA shift  48

State 99:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          int_mdexpr ::= binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr * CL_SQPAR

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                      CL_SQPAR shift  206

State 100:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          int_mdexpr ::= unary_int_fn OP_SQPAR int_mdexpr * CL_SQPAR

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                      CL_SQPAR shift  208

State 101:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          int_mdexpr ::= WHEN logic_mdcond COLON int_mdexpr * SEMICOLON EVER int_mdexpr SEMICOLON

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                     SEMICOLON shift  154

State 102:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          int_mdexpr ::= WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr * SEMICOLON

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                     SEMICOLON shift  209

State 103:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          int_mdexpr ::= EVER int_mdexpr * SEMICOLON

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                     SEMICOLON shift  210

State 104:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          int_mdexpr ::= IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr * COMMA int_mdexpr CL_SQPAR

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                         COMMA shift  56

State 105:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          int_mdexpr ::= IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr * CL_SQPAR

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                      CL_SQPAR shift  228

State 106:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          measure ::= real_const OPEN_E int_mdexpr * CL_BRACK
          measure ::= real_const OPEN_E int_mdexpr * DIV logic_mdcond CL_BRACK

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  35
                      CL_BRACK shift  233

State 107:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
          measure ::= OPEN_E int_mdexpr * CL_BRACK
          measure ::= OPEN_E int_mdexpr * DIV logic_mdcond CL_BRACK

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  37
                      CL_BRACK shift  237

State 108:
          real_mdexpr ::= OP_PAREN real_mdexpr * CL_PAREN
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                      CL_PAREN shift  244

State 109:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
          real_mdexpr ::= binary_real_fn OP_SQPAR real_mdexpr * COMMA real_mdexpr CL_SQPAR

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                         COMMA shift  8

State 110:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
          real_mdexpr ::= binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr * CL_SQPAR

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                      CL_SQPAR shift  247

State 111:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
          real_mdexpr ::= unary_real_fn OP_SQPAR real_mdexpr * CL_SQPAR

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                      CL_SQPAR shift  249

State 112:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
          real_mdexpr ::= LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr * CL_SQPAR

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                      CL_SQPAR shift  251

State 113:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
          real_mdexpr ::= IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr * COMMA real_mdexpr CL_SQPAR

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                         COMMA shift  14

State 114:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
          real_mdexpr ::= IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr * CL_SQPAR

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                      CL_SQPAR shift  252

State 115:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
          real_mdexpr ::= WHEN logic_mdcond COLON real_mdexpr * SEMICOLON EVER real_mdexpr SEMICOLON

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                     SEMICOLON shift  163

State 116:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
          real_mdexpr ::= WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr * SEMICOLON

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                     SEMICOLON shift  253

State 117:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
          real_mdexpr ::= EVER real_mdexpr * SEMICOLON

                          PLUS shift  2
                         MINUS shift  4
                         TIMES shift  5
                           DIV shift  6
                     SEMICOLON shift  254

State 118:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
     (77) logic_mdcond ::= int_mdexpr comp_op int_mdexpr *

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                     {default} reduce 77

State 119:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
    (143) cslta_expr ::= int_mdexpr comp_op int_mdexpr *

                          PLUS shift  42
                         MINUS shift  44
                         TIMES shift  45
                           DIV shift  46
                     {default} reduce 143

State 120:
          int_mdexpr ::= WHEN logic_mdcond * COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond

                            OR shift  33
                           AND shift  31
                         COLON shift  52

State 121:
          int_mdexpr ::= IF_FN OP_SQPAR logic_mdcond * COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond

                            OR shift  33
                           AND shift  31
                         COMMA shift  55

State 122:
          logic_mdcond ::= OP_PAREN logic_mdcond * CL_PAREN
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond

                            OR shift  33
                           AND shift  31
                      CL_PAREN shift  229

State 123:
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond
          measure ::= OPEN_P logic_mdcond * CL_BRACK

                            OR shift  33
                           AND shift  31
                      CL_BRACK shift  230

State 124:
          measure ::= real_const * OPEN_P logic_mdcond CL_BRACK
          measure ::= real_const * OPEN_E int_mdexpr CL_BRACK
          measure ::= real_const * OPEN_E int_mdexpr DIV logic_mdcond CL_BRACK
          measure ::= real_const * OPEN_X G_TRANSITION_ID CL_BRACK
          measure ::= real_const * OPEN_X G_TRANSITION_ID DIV logic_mdcond CL_BRACK

                        OPEN_P shift  34
                        OPEN_E shift  57
                        OPEN_X shift  156

State 125:
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond
          measure ::= real_const OPEN_P logic_mdcond * CL_BRACK

                            OR shift  33
                           AND shift  31
                      CL_BRACK shift  231

State 126:
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond
          measure ::= real_const OPEN_E int_mdexpr DIV logic_mdcond * CL_BRACK

                            OR shift  33
                           AND shift  31
                      CL_BRACK shift  232

State 127:
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond
          measure ::= real_const OPEN_X G_TRANSITION_ID DIV logic_mdcond * CL_BRACK

                            OR shift  33
                           AND shift  31
                      CL_BRACK shift  235

State 128:
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond
          measure ::= OPEN_E int_mdexpr DIV logic_mdcond * CL_BRACK

                            OR shift  33
                           AND shift  31
                      CL_BRACK shift  236

State 129:
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond
          measure ::= OPEN_X G_TRANSITION_ID DIV logic_mdcond * CL_BRACK

                            OR shift  33
                           AND shift  31
                      CL_BRACK shift  239

State 130:
          real_mdexpr ::= IF_FN OP_SQPAR logic_mdcond * COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond

                            OR shift  33
                           AND shift  31
                         COMMA shift  13

State 131:
          real_mdexpr ::= WHEN logic_mdcond * COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond

                            OR shift  33
                           AND shift  31
                         COLON shift  15

State 132:
          clock_constr ::= XCLK * LESS clock_value
          clock_constr ::= XCLK * GREATER clock_value
          clock_constr ::= XCLK * EQ clock_value

                          LESS shift  88
                            EQ shift  90
                       GREATER shift  89

State 133:
          parser_entry ::= DTA_STATE_PROPOSITION cslta_expr * END
          cslta_expr ::= cslta_expr * AND cslta_expr
          cslta_expr ::= cslta_expr * OR cslta_expr

                            OR shift  22
                           AND shift  20
                           END shift  293

State 134:
          cslta_expr ::= OP_PAREN cslta_expr * CL_PAREN
          cslta_expr ::= cslta_expr * AND cslta_expr
          cslta_expr ::= cslta_expr * OR cslta_expr

                            OR shift  22
                           AND shift  20
                      CL_PAREN shift  298

State 135:
          parser_entry ::= CSLTA_EXPR cslta_expr * END
          cslta_expr ::= cslta_expr * AND cslta_expr
          cslta_expr ::= cslta_expr * OR cslta_expr

                            OR shift  22
                           AND shift  20
                           END shift  317

State 136:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
     (23) int_mdexpr ::= int_mdexpr MINUS int_mdexpr *
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr

                         TIMES shift  45
                           DIV shift  46
                     {default} reduce 23

State 137:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
     (22) int_mdexpr ::= int_mdexpr PLUS int_mdexpr *
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr

                         TIMES shift  45
                           DIV shift  46
                     {default} reduce 22

State 138:
          measure ::= real_const OPEN_X G_TRANSITION_ID * CL_BRACK
          measure ::= real_const OPEN_X G_TRANSITION_ID * DIV logic_mdcond CL_BRACK

                           DIV shift  36
                      CL_BRACK shift  234

State 139:
          measure ::= OPEN_X G_TRANSITION_ID * CL_BRACK
          measure ::= OPEN_X G_TRANSITION_ID * DIV logic_mdcond CL_BRACK

                           DIV shift  38
                      CL_BRACK shift  238

State 140:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
     (44) real_mdexpr ::= real_mdexpr MINUS real_mdexpr *
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr

                         TIMES shift  5
                           DIV shift  6
                     {default} reduce 44

State 141:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
     (43) real_mdexpr ::= real_mdexpr PLUS real_mdexpr *
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr

                         TIMES shift  5
                           DIV shift  6
                     {default} reduce 43

State 142:
          clock_constr ::= clock_value * LESS XCLK LESS clock_value
          clock_constr ::= clock_value * LESS XCLK
          clock_constr ::= clock_value * GREATER XCLK

                          LESS shift  168
                       GREATER shift  170

State 143:
          act_list ::= act_list * COMMA G_ACTION_ID
          actset ::= ACTS SETMINUS OP_BRACK act_list * CL_BRACK

                         COMMA shift  174
                      CL_BRACK shift  288

State 144:
          act_list ::= act_list * COMMA G_ACTION_ID
          actset ::= OP_BRACK act_list * CL_BRACK

                         COMMA shift  174
                      CL_BRACK shift  289

State 145:
          clock_value_list ::= clock_value_list * COMMA clock_id_name EQ real_const
    (135) dta_binding ::= clock_value_list *
          dta_binding ::= clock_value_list * OR transition_list OR spexpr_list

                            OR shift  63
                         COMMA shift  68
                     {default} reduce 135

State 146:
          transition_list ::= transition_list * COMMA transition_id_name EQ G_TRANSITION_ID
          dta_binding ::= clock_value_list OR transition_list * OR spexpr_list

                            OR shift  64
                         COMMA shift  69

State 147:
    (131) spexpr_list ::= spexpr_name EQ cslta_expr *
          cslta_expr ::= cslta_expr * AND cslta_expr
          cslta_expr ::= cslta_expr * OR cslta_expr

                            OR shift  22
                           AND shift  20
                     {default} reduce 131

State 148:
    (132) spexpr_list ::= spexpr_list COMMA spexpr_name EQ cslta_expr *
          cslta_expr ::= cslta_expr * AND cslta_expr
          cslta_expr ::= cslta_expr * OR cslta_expr

                            OR shift  22
                           AND shift  20
                     {default} reduce 132

State 149:
          parser_entry ::= GREATSPN_MEASURE measure opt_semicolon * END

                           END shift  190

State 150:
          int_marking ::= SHARP * G_PLACE_ID

                    G_PLACE_ID shift  200

State 151:
          int_mdexpr ::= binary_int_fn * OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR

                      OP_SQPAR shift  47

State 152:
          int_mdexpr ::= unary_int_fn * OP_SQPAR int_mdexpr CL_SQPAR

                      OP_SQPAR shift  50

State 153:
          int_mdexpr ::= IF_FN * OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR

                      OP_SQPAR shift  29

State 154:
          int_mdexpr ::= WHEN logic_mdcond COLON int_mdexpr SEMICOLON * EVER int_mdexpr SEMICOLON

                          EVER shift  53

State 155:
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond
     (81) logic_mdcond ::= logic_mdcond OR logic_mdcond *

                           AND shift  31
                     {default} reduce 81

State 156:
          measure ::= real_const OPEN_X * G_TRANSITION_ID CL_BRACK
          measure ::= real_const OPEN_X * G_TRANSITION_ID DIV logic_mdcond CL_BRACK

               G_TRANSITION_ID shift  138

State 157:
          measure ::= OPEN_X * G_TRANSITION_ID CL_BRACK
          measure ::= OPEN_X * G_TRANSITION_ID DIV logic_mdcond CL_BRACK

               G_TRANSITION_ID shift  139

State 158:
          parser_entry ::= GREATSPN_MDEPDELAY real_mdexpr opt_semicolon * END

                           END shift  240

State 159:
          real_mdexpr ::= binary_real_fn * OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR

                      OP_SQPAR shift  7

State 160:
          real_mdexpr ::= unary_real_fn * OP_SQPAR real_mdexpr CL_SQPAR

                      OP_SQPAR shift  10

State 161:
          real_mdexpr ::= LOG_FN * OP_SQPAR real_mdexpr CL_SQPAR
          real_mdexpr ::= LOG_FN * OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR

                      OP_SQPAR shift  11

State 162:
          real_mdexpr ::= IF_FN * OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR

                      OP_SQPAR shift  39

State 163:
          real_mdexpr ::= WHEN logic_mdcond COLON real_mdexpr SEMICOLON * EVER real_mdexpr SEMICOLON

                          EVER shift  16

State 164:
          parser_entry ::= GREATSPN_MDEARCMULT int_mdexpr opt_semicolon * END

                           END shift  275

State 165:
          parser_entry ::= GREATSPN_TRNGUARD logic_mdcond opt_semicolon * END

                           END shift  276

State 166:
          parser_entry ::= GREATSPN_GENERALPDF real_mdexpr opt_semicolon * END

                           END shift  277

State 167:
          parser_entry ::= DTA_EDGE_DEF dta_edge * END

                           END shift  278

State 168:
          clock_constr ::= clock_value LESS * XCLK LESS clock_value
          clock_constr ::= clock_value LESS * XCLK

                          XCLK shift  169

State 169:
          clock_constr ::= clock_value LESS XCLK * LESS clock_value
    (111) clock_constr ::= clock_value LESS XCLK *

                          LESS shift  87
                     {default} reduce 111

State 170:
          clock_constr ::= clock_value GREATER * XCLK

                          XCLK shift  282

State 171:
          dta_edge ::= OP_PAREN clock_constr * COMMA actset opt_reset CL_PAREN

                         COMMA shift  86

State 172:
    (103) actset ::= ACTS *
          actset ::= ACTS * SETMINUS OP_BRACK act_list CL_BRACK

                      SETMINUS shift  173
                     {default} reduce 103

State 173:
          actset ::= ACTS SETMINUS * OP_BRACK act_list CL_BRACK

                      OP_BRACK shift  93

State 174:
          act_list ::= act_list COMMA * G_ACTION_ID

                   G_ACTION_ID shift  287

State 175:
          opt_reset ::= COMMA * RESET

                         RESET shift  291

State 176:
          dta_edge ::= OP_PAREN clock_constr COMMA actset opt_reset * CL_PAREN

                      CL_PAREN shift  292

State 177:
          cslta_expr ::= PROB_TA comp_op real_const id_or_quoted_id * OP_PAREN dta_binding CL_PAREN

                      OP_PAREN shift  61

State 178:
          clock_value_list ::= clock_id_name * EQ real_const

                            EQ shift  82

State 179:
          clock_value_list ::= clock_value_list COMMA clock_id_name * EQ real_const

                            EQ shift  83

State 180:
          transition_list ::= transition_id_name * EQ G_TRANSITION_ID

                            EQ shift  181

State 181:
          transition_list ::= transition_id_name EQ * G_TRANSITION_ID

               G_TRANSITION_ID shift  310

State 182:
          transition_list ::= transition_list COMMA transition_id_name * EQ G_TRANSITION_ID

                            EQ shift  183

State 183:
          transition_list ::= transition_list COMMA transition_id_name EQ * G_TRANSITION_ID

               G_TRANSITION_ID shift  311

State 184:
          spexpr_list ::= spexpr_name * EQ cslta_expr

                            EQ shift  24

State 185:
          spexpr_list ::= spexpr_list * COMMA spexpr_name EQ cslta_expr
    (136) dta_binding ::= clock_value_list OR transition_list OR spexpr_list *

                         COMMA shift  71
                     {default} reduce 136

State 186:
          spexpr_list ::= spexpr_list COMMA spexpr_name * EQ cslta_expr

                            EQ shift  25

State 187:
          cslta_expr ::= PROB_TA comp_op real_const id_or_quoted_id OP_PAREN dta_binding * CL_PAREN

                      CL_PAREN shift  314

State 188:
          cslta_expr ::= cslta_expr * AND cslta_expr
          cslta_expr ::= cslta_expr * OR cslta_expr
    (147) cslta_expr ::= cslta_expr OR cslta_expr *

                           AND shift  20
                     {default} reduce 147

State 189:
          parser_entry ::= DTA_BINDING_RULES dta_binding * END

                           END shift  316

State 190:
      (0) parser_entry ::= GREATSPN_MEASURE measure opt_semicolon END *

                     {default} reduce 0

State 191:
     (11) opt_semicolon ::= SEMICOLON *

                     {default} reduce 11

State 192:
     (12) real_const ::= REALNUM *

                     {default} reduce 12

State 193:
     (13) real_const ::= INTEGER *

                     {default} reduce 13

State 194:
     (14) real_const ::= G_RATE_PARAM *

                     {default} reduce 14

State 195:
     (15) real_const ::= G_MARK_PARAM *

                     {default} reduce 15

State 196:
          measure ::= measure * PLUS measure
     (88) measure ::= measure PLUS measure *
          measure ::= measure * MINUS measure

                     {default} reduce 88

State 197:
          measure ::= measure * PLUS measure
          measure ::= measure * MINUS measure
     (89) measure ::= measure MINUS measure *

                     {default} reduce 89

State 198:
     (16) int_const ::= INTEGER *

                     {default} reduce 16

State 199:
     (17) int_const ::= G_MARK_PARAM *

                     {default} reduce 17

State 200:
     (18) int_marking ::= SHARP G_PLACE_ID *

                     {default} reduce 18

State 201:
     (19) int_mdexpr ::= int_const *

                     {default} reduce 19

State 202:
     (20) int_mdexpr ::= int_marking *

                     {default} reduce 20

State 203:
     (21) int_mdexpr ::= OP_PAREN int_mdexpr CL_PAREN *

                     {default} reduce 21

State 204:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
     (24) int_mdexpr ::= int_mdexpr TIMES int_mdexpr *
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr

                     {default} reduce 24

State 205:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
     (25) int_mdexpr ::= int_mdexpr DIV int_mdexpr *

                     {default} reduce 25

State 206:
     (26) int_mdexpr ::= binary_int_fn OP_SQPAR int_mdexpr COMMA int_mdexpr CL_SQPAR *

                     {default} reduce 26

State 207:
          int_mdexpr ::= int_mdexpr * PLUS int_mdexpr
          int_mdexpr ::= int_mdexpr * MINUS int_mdexpr
          int_mdexpr ::= int_mdexpr * TIMES int_mdexpr
          int_mdexpr ::= int_mdexpr * DIV int_mdexpr
     (27) int_mdexpr ::= MINUS int_mdexpr *

                     {default} reduce 27

State 208:
     (28) int_mdexpr ::= unary_int_fn OP_SQPAR int_mdexpr CL_SQPAR *

                     {default} reduce 28

State 209:
     (30) int_mdexpr ::= WHEN logic_mdcond COLON int_mdexpr SEMICOLON EVER int_mdexpr SEMICOLON *

                     {default} reduce 30

State 210:
     (31) int_mdexpr ::= EVER int_mdexpr SEMICOLON *

                     {default} reduce 31

State 211:
     (32) unary_int_fn ::= ABS_FN *

                     {default} reduce 32

State 212:
     (33) unary_int_fn ::= FACTORIAL_FN *

                     {default} reduce 33

State 213:
     (34) binary_int_fn ::= MIN_FN *

                     {default} reduce 34

State 214:
     (35) binary_int_fn ::= MAX_FN *

                     {default} reduce 35

State 215:
     (36) binary_int_fn ::= MOD_FN *

                     {default} reduce 36

State 216:
     (37) binary_int_fn ::= BINOMIAL_FN *

                     {default} reduce 37

State 217:
     (38) binary_int_fn ::= FRACT_FN *

                     {default} reduce 38

State 218:
     (75) logic_mdcond ::= TRUE *

                     {default} reduce 75

State 219:
     (76) logic_mdcond ::= FALSE *

                     {default} reduce 76

State 220:
     (78) logic_mdcond ::= NOT logic_mdcond *
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
          logic_mdcond ::= logic_mdcond * OR logic_mdcond

                     {default} reduce 78

State 221:
          logic_mdcond ::= logic_mdcond * AND logic_mdcond
     (80) logic_mdcond ::= logic_mdcond AND logic_mdcond *
          logic_mdcond ::= logic_mdcond * OR logic_mdcond

                     {default} reduce 80

State 222:
     (82) comp_op ::= EQ *

                     {default} reduce 82

State 223:
     (83) comp_op ::= NOT_EQ *

                     {default} reduce 83

State 224:
     (84) comp_op ::= GREATER *

                     {default} reduce 84

State 225:
     (85) comp_op ::= LESS *

                     {default} reduce 85

State 226:
     (86) comp_op ::= GREATER_EQ *

                     {default} reduce 86

State 227:
     (87) comp_op ::= LESS_EQ *

                     {default} reduce 87

State 228:
     (29) int_mdexpr ::= IF_FN OP_SQPAR logic_mdcond COMMA int_mdexpr COMMA int_mdexpr CL_SQPAR *

                     {default} reduce 29

State 229:
     (79) logic_mdcond ::= OP_PAREN logic_mdcond CL_PAREN *

                     {default} reduce 79

State 230:
     (90) measure ::= OPEN_P logic_mdcond CL_BRACK *

                     {default} reduce 90

State 231:
     (91) measure ::= real_const OPEN_P logic_mdcond CL_BRACK *

                     {default} reduce 91

State 232:
     (95) measure ::= real_const OPEN_E int_mdexpr DIV logic_mdcond CL_BRACK *

                     {default} reduce 95

State 233:
     (93) measure ::= real_const OPEN_E int_mdexpr CL_BRACK *

                     {default} reduce 93

State 234:
     (97) measure ::= real_const OPEN_X G_TRANSITION_ID CL_BRACK *

                     {default} reduce 97

State 235:
     (99) measure ::= real_const OPEN_X G_TRANSITION_ID DIV logic_mdcond CL_BRACK *

                     {default} reduce 99

State 236:
     (94) measure ::= OPEN_E int_mdexpr DIV logic_mdcond CL_BRACK *

                     {default} reduce 94

State 237:
     (92) measure ::= OPEN_E int_mdexpr CL_BRACK *

                     {default} reduce 92

State 238:
     (96) measure ::= OPEN_X G_TRANSITION_ID CL_BRACK *

                     {default} reduce 96

State 239:
     (98) measure ::= OPEN_X G_TRANSITION_ID DIV logic_mdcond CL_BRACK *

                     {default} reduce 98

State 240:
      (1) parser_entry ::= GREATSPN_MDEPDELAY real_mdexpr opt_semicolon END *

                     {default} reduce 1

State 241:
     (39) real_mdexpr ::= real_const *

                     {default} reduce 39

State 242:
     (40) real_mdexpr ::= int_marking *

                     {default} reduce 40

State 243:
     (41) real_mdexpr ::= PDF_X_VAR *

                     {default} reduce 41

State 244:
     (42) real_mdexpr ::= OP_PAREN real_mdexpr CL_PAREN *

                     {default} reduce 42

State 245:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
     (45) real_mdexpr ::= real_mdexpr TIMES real_mdexpr *
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr

                     {default} reduce 45

State 246:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
     (46) real_mdexpr ::= real_mdexpr DIV real_mdexpr *

                     {default} reduce 46

State 247:
     (47) real_mdexpr ::= binary_real_fn OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR *

                     {default} reduce 47

State 248:
          real_mdexpr ::= real_mdexpr * PLUS real_mdexpr
          real_mdexpr ::= real_mdexpr * MINUS real_mdexpr
          real_mdexpr ::= real_mdexpr * TIMES real_mdexpr
          real_mdexpr ::= real_mdexpr * DIV real_mdexpr
     (48) real_mdexpr ::= MINUS real_mdexpr *

                     {default} reduce 48

State 249:
     (49) real_mdexpr ::= unary_real_fn OP_SQPAR real_mdexpr CL_SQPAR *

                     {default} reduce 49

State 250:
     (50) real_mdexpr ::= LOG_FN OP_SQPAR real_mdexpr CL_SQPAR *

                     {default} reduce 50

State 251:
     (51) real_mdexpr ::= LOG_FN OP_SQPAR real_mdexpr COMMA real_mdexpr CL_SQPAR *

                     {default} reduce 51

State 252:
     (52) real_mdexpr ::= IF_FN OP_SQPAR logic_mdcond COMMA real_mdexpr COMMA real_mdexpr CL_SQPAR *

                     {default} reduce 52

State 253:
     (53) real_mdexpr ::= WHEN logic_mdcond COLON real_mdexpr SEMICOLON EVER real_mdexpr SEMICOLON *

                     {default} reduce 53

State 254:
     (54) real_mdexpr ::= EVER real_mdexpr SEMICOLON *

                     {default} reduce 54

State 255:
     (55) unary_real_fn ::= unary_int_fn *

                     {default} reduce 55

State 256:
     (56) unary_real_fn ::= SIN_FN *

                     {default} reduce 56

State 257:
     (57) unary_real_fn ::= COS_FN *

                     {default} reduce 57

State 258:
     (58) unary_real_fn ::= TAN_FN *

                     {default} reduce 58

State 259:
     (59) unary_real_fn ::= ARCSIN_FN *

                     {default} reduce 59

State 260:
     (60) unary_real_fn ::= ARCCOS_FN *

                     {default} reduce 60

State 261:
     (61) unary_real_fn ::= ARCTAN_FN *

                     {default} reduce 61

State 262:
     (62) unary_real_fn ::= EXP_FN *

                     {default} reduce 62

State 263:
     (63) unary_real_fn ::= SQRT_FN *

                     {default} reduce 63

State 264:
     (64) unary_real_fn ::= CEIL_FN *

                     {default} reduce 64

State 265:
     (65) unary_real_fn ::= FLOOR_FN *

                     {default} reduce 65

State 266:
     (66) unary_real_fn ::= DIRACDELTA_FN *

                     {default} reduce 66

State 267:
     (67) binary_real_fn ::= binary_int_fn *

                     {default} reduce 67

State 268:
     (68) binary_real_fn ::= POW_FN *

                     {default} reduce 68

State 269:
     (69) binary_real_fn ::= RECT_FN *

                     {default} reduce 69

State 270:
     (70) binary_real_fn ::= UNIFORM_FN *

                     {default} reduce 70

State 271:
     (71) binary_real_fn ::= TRIANGULAR_FN *

                     {default} reduce 71

State 272:
     (72) binary_real_fn ::= ERLANG_FN *

                     {default} reduce 72

State 273:
     (73) binary_real_fn ::= TRUNCATED_EXP_FN *

                     {default} reduce 73

State 274:
     (74) binary_real_fn ::= PARETO_FN *

                     {default} reduce 74

State 275:
      (2) parser_entry ::= GREATSPN_MDEARCMULT int_mdexpr opt_semicolon END *

                     {default} reduce 2

State 276:
      (3) parser_entry ::= GREATSPN_TRNGUARD logic_mdcond opt_semicolon END *

                     {default} reduce 3

State 277:
      (4) parser_entry ::= GREATSPN_GENERALPDF real_mdexpr opt_semicolon END *

                     {default} reduce 4

State 278:
      (5) parser_entry ::= DTA_EDGE_DEF dta_edge END *

                     {default} reduce 5

State 279:
    (107) clock_value ::= G_CLOCKVALUE_ID *

                     {default} reduce 107

State 280:
    (108) clock_value ::= INTEGER *

                     {default} reduce 108

State 281:
    (109) clock_constr ::= clock_value LESS XCLK LESS clock_value *

                     {default} reduce 109

State 282:
    (113) clock_constr ::= clock_value GREATER XCLK *

                     {default} reduce 113

State 283:
    (110) clock_constr ::= XCLK LESS clock_value *

                     {default} reduce 110

State 284:
    (112) clock_constr ::= XCLK GREATER clock_value *

                     {default} reduce 112

State 285:
    (114) clock_constr ::= XCLK EQ clock_value *

                     {default} reduce 114

State 286:
    (101) act_list ::= G_ACTION_ID *

                     {default} reduce 101

State 287:
    (102) act_list ::= act_list COMMA G_ACTION_ID *

                     {default} reduce 102

State 288:
    (104) actset ::= ACTS SETMINUS OP_BRACK act_list CL_BRACK *

                     {default} reduce 104

State 289:
    (105) actset ::= OP_BRACK act_list CL_BRACK *

                     {default} reduce 105

State 290:
    (106) actset ::= SHARP *

                     {default} reduce 106

State 291:
    (115) opt_reset ::= COMMA RESET *

                     {default} reduce 115

State 292:
    (117) dta_edge ::= OP_PAREN clock_constr COMMA actset opt_reset CL_PAREN *

                     {default} reduce 117

State 293:
      (6) parser_entry ::= DTA_STATE_PROPOSITION cslta_expr END *

                     {default} reduce 6

State 294:
    (139) cslta_expr ::= TRUE *

                     {default} reduce 139

State 295:
    (140) cslta_expr ::= FALSE *

                     {default} reduce 140

State 296:
    (141) cslta_expr ::= G_ATOMIC_PROP_ID *

                     {default} reduce 141

State 297:
    (142) cslta_expr ::= G_PLACE_ID *

                     {default} reduce 142

State 298:
    (144) cslta_expr ::= OP_PAREN cslta_expr CL_PAREN *

                     {default} reduce 144

State 299:
    (145) cslta_expr ::= NOT cslta_expr *
          cslta_expr ::= cslta_expr * AND cslta_expr
          cslta_expr ::= cslta_expr * OR cslta_expr

                     {default} reduce 145

State 300:
    (137) id_or_quoted_id ::= ID *

                     {default} reduce 137

State 301:
    (138) id_or_quoted_id ::= STRING *

                     {default} reduce 138

State 302:
    (118) clock_id_name ::= id_or_quoted_id *

                     {default} reduce 118

State 303:
    (119) clock_id_name ::= G_RATE_PARAM *

                     {default} reduce 119

State 304:
    (120) clock_id_name ::= G_CLOCKVALUE_ID *

                     {default} reduce 120

State 305:
    (125) clock_value_list ::= clock_id_name EQ real_const *

                     {default} reduce 125

State 306:
    (126) clock_value_list ::= clock_value_list COMMA clock_id_name EQ real_const *

                     {default} reduce 126

State 307:
    (121) transition_id_name ::= id_or_quoted_id *

                     {default} reduce 121

State 308:
    (122) transition_id_name ::= G_TRANSITION_ID *

                     {default} reduce 122

State 309:
    (123) transition_id_name ::= G_ACTION_ID *

                     {default} reduce 123

State 310:
    (128) transition_list ::= transition_id_name EQ G_TRANSITION_ID *

                     {default} reduce 128

State 311:
    (129) transition_list ::= transition_list COMMA transition_id_name EQ G_TRANSITION_ID *

                     {default} reduce 129

State 312:
    (133) spexpr_name ::= id_or_quoted_id *

                     {default} reduce 133

State 313:
    (134) spexpr_name ::= G_ATOMIC_PROP_ID *

                     {default} reduce 134

State 314:
    (148) cslta_expr ::= PROB_TA comp_op real_const id_or_quoted_id OP_PAREN dta_binding CL_PAREN *

                     {default} reduce 148

State 315:
          cslta_expr ::= cslta_expr * AND cslta_expr
    (146) cslta_expr ::= cslta_expr AND cslta_expr *
          cslta_expr ::= cslta_expr * OR cslta_expr

                     {default} reduce 146

State 316:
      (7) parser_entry ::= DTA_BINDING_RULES dta_binding END *

                     {default} reduce 7

State 317:
      (8) parser_entry ::= CSLTA_EXPR cslta_expr END *

                     {default} reduce 8

State 318:
      (9) parser_entry ::= INVALID *

                     {default} reduce 9

